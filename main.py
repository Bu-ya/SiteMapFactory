
import csv
import pprint
from xml.etree.ElementTree import Element, ElementTree, SubElement, tostring
from datetime import datetime
from xml.dom import minidom

'''
Функция generate_sitemap принимает список URL и создает XML sitemap
'''
def generate_sitemap(urls):
    # Создаем корневой элемент 'urlset' с атрибутом 'xmlns'
    urlset = Element('urlset')
    urlset.set('xmlns', 'https://www.sitemaps.com/schemas/sitemap/0.9')

    # Перебираем каждый URL в списке
    for url in urls:
        # Создаем элемент 'url' для каждого URL
        url_element = SubElement(urlset, 'url')

        # Добавляем элемент 'loc' с текстом URL
        loc = SubElement(url_element, 'loc')
        loc.text = url

        # Добавляем элемент 'priority' с фиксированным значением
        priority = SubElement(url_element, 'priority')
        priority.text = '0.5'

        # Добавляем элемент 'changefreq' с фиксированным значением
        changefreq = SubElement(url_element, 'changefreq')
        changefreq.text = 'weekly'

        # Добавляем элемент 'lastmod' с текущей датой
        lastmod = SubElement(url_element, 'lastmod')
        lastmod.text = datetime.now().strftime('%Y-%m-%d')

    return urlset

'''
Функция save_sitemap принимает XML элемент urlset и имя файла, и сохраняет XML в файл
'''
def save_sitemap(urlset, filename):
    tree = ElementTree(urlset)
    tree.write(filename, encoding='utf-8', xml_declaration=True)

'''
Функция generate_sitemapindex принимает список URL и создает XML sitemap index
'''
def generate_sitemapindex(urls):
    # Создаем корневой элемент 'sitemapindex' с атрибутом 'xmlns'
    sitemapindex = Element('sitemapindex')
    sitemapindex.set('xmlns', 'http://www.sitemaps.com/schemas/sitemap/0.9')

    # Перебираем каждый URL в списке
    for url in urls:
        # Создаем элемент 'sitemap' для каждого URL
        sitemap = SubElement(sitemapindex, 'sitemap')

        # Добавляем элемент 'loc' с текстом URL
        loc = SubElement(sitemap, 'loc')
        loc.text = url

        # Добавляем элемент 'lastmod' с текущей датой и временем
        lastmod = SubElement(sitemap, 'lastmod')
        lastmod.text = datetime.now().strftime('%Y-%m-%dT%H:%M:%S+00:00')

    # Преобразуем XML в красиво отформатированную строку
    xml_string = minidom.parseString(tostring(sitemapindex)).toprettyxml(indent='  ')

    # Добавляем комментарий в начало строки XML
    xml_string_with_comment = f"<!-- XML Sitemap generated by SEO -->\n{xml_string}"

    return xml_string_with_comment
















пути = {}  # Словарь для хранения путей URL
iks = 0  # Счетчик для генерации уникальных ключей
d = {}  # Словарь для хранения количества вхождений первых компонентов URL
d1 = {}  # Словарь для хранения количества вхождений вторых компонентов URL, но только для 'catalog'
DATA_END = {}  # Неиспользуемый словарь, возможно зарезервирован для дальнейшего использования

def n_ik():
    global iks
    # Увеличиваем счетчик на 1 и возвращаем его значение в виде строки
    iks = iks + 1
    return str(iks)

print('start')
s = 0  # Счетчик строк

# Открываем CSV файл для чтения
with open('test.csv', encoding='utf-8') as r_file:
    reader = csv.reader(r_file, delimiter=",")
    for row in reader:
        s = s + 1
        # Пропускаем заголовок и строки с определенным URL
        if row[0] == 'https://test.test/' or row[0] == 'url':
            continue
        
        string_url = row[0]
        # Удаляем первые 22 символа и разбиваем URL на компоненты
        url_comp_list = string_url[22:].split('/')
        
        # Добавляем компоненты URL в словарь пути с уникальным ключом
        пути[n_ik()] = url_comp_list

# Обрабатываем первый уровень компонентов URL
for i in пути:
    lis = пути[i]

    try:
        d[lis[0]]  # Проверяем, есть ли первый компонент в словаре d
    except:
        d[lis[0]] = {}  # Если нет, создаем новый словарь для этого компонента
        d[lis[0]]['s'] = 0  # Инициализируем счетчик

    finally:
        d[lis[0]]['s'] = d[lis[0]]['s'] + 1  # Увеличиваем счетчик

# Обрабатываем второй уровень компонентов URL, но только для 'catalog'
for i in пути:
    lis = пути[i]

    if lis[0] != 'catalog':
        continue  # Пропускаем, если первый компонент не 'catalog'
        
    try:
        lis[1]  # Проверяем, есть ли второй компонент
    except:
        continue  # Пропускаем, если второго компонента нет

    try:
        d1[lis[1]]  # Проверяем, есть ли второй компонент в словаре d1
    except:
        d1[lis[1]] = {}  # Если нет, создаем новый словарь для этого компонента
        d1[lis[1]]['s'] = 0  # Инициализируем счетчик

    finally:
        d1[lis[1]]['s'] = d1[lis[1]]['s'] + 1  # Увеличиваем счетчик





правило_2 = {}
    
file_1={}
file_1['promo-odezhda']={}
file_1['futbolki']={}
file_1['polo']={}
file_1['vetrovki-kurtki-zhilety']={}
file_1['odejda-jumper']={}
file_1['vodolazki']={}
file_1['odejda-vyazanye-komplekty']={}
file_1['odejda-tolstovki']={}
file_1['rubashki']={}
file_1['bryuki-i-shorty']={}
file_1['detskaya-odejda']={}
file_1['shapki-sharfy-perchatki']={}
file_1['odejda-kepki']={}
file_1['kozy-r-ki-ot-solncza']={}
file_1['odejda-panamy']={}
file_1['shlyapy']={}
file_1['povyazki-na-golovu']={}
file_1['odejda-sportivnaya-odezhda']={}
file_1['odejda-aksessuary']={}
file_1['remni']={}
file_1['zaponki']={}
file_1['noski-s-logotipom']={}
file_1['ochki-solncezashitnye']={}
file_1['fartuki-s-logotipom']={}
file_1['furnitura']={}
file_1['rabochaya-odezhda']={}
file_1['signalnye-zhilety']={}
file_1['obuv']={}

file_1['posuda']={}
file_1['posuda-krujki']={}
file_1['posuda-termostakany']={}
file_1['posuda-stakany']={}
file_1['termosy']={}
file_1['lanchboksy-']={}
file_1['posuda-nabory-posudy']={}
file_1['flyagi']={}
file_1['aksessuary-dlya-alkogolya']={}
file_1['bokaly-']={}
file_1['grafiny']={}
file_1['nabory-tarelok']={}
file_1['kuxonny-e-nozhi']={}
file_1['predmety-servirovki']={}
file_1['zavarochny-e-chajniki']={}
file_1['posuda-vip-posuda']={}
file_1['stopki']={}
file_1['bokaly-dlya-piva']={}

file_1['zonty']={}
file_1['zonty-skladnye-zonty']={}
file_1['dozhdeviki']={}
file_1['nabory-s-zontami']={}
file_1['zonty-vip-zonty']={}
file_1['zonty-neobychnye-zonty']={}
file_1['zonty-zonty-trosti']={}

file_1['puteshestvie-i-otdy-x']={}
file_1['s-butylka-dlya-vody']={}
file_1['otdyh']={}
file_1['vse-dlya-puteshestvij']={}
file_1['vse-dlya-piknika']={}
file_1['otdyh-sportivnye-tovary']={}
file_1['otdyh-turisticheskiye-prinadlezhnosti']={}
file_1['otdyh-flyajki']={}
file_1['fonari-s-logotipom']={}
file_1['nozhi-i-instrumenty']={}
file_1['otdyh-avtoprinadlejnosti']={}
file_1['igry-podarki-detyam']={}
file_1['podarki-dlya-tvorchestva-i-hobbi']={}
file_1['tovary-dlya-bagazha']={}

file_1['chasy']={}
file_1['chasy-nastennye']={}
file_1['chasy-naruchnye']={}
file_1['chasy-nastolnye']={}
file_1['chasy-pesochnye']={}
file_1['chasy-vip-chasy']={}
file_1['meteostanczii']={}
    
    
    
file_2 ={}     
file_2['podarochnye-nabory']={}
file_2['personalnye-podarochnye-nabory']={}
file_2['nabory-s-termostakanami-termosami']={}
file_2['nabory-dlya-sy-ra']={}
file_2['nabory-dlya-vodki']={}
file_2['s-nabory-dlya-viski']={}
file_2['s-podarochnye-produktovye-nabory']={}
file_2['nabory-s-kosmetikoi']={}
file_2['chajny-e-i-kofejny-e-nabory-']={}
file_2['sportivny-e-nabory-']={}
file_2['muzhskie-nabory-']={}
file_2['nabory-dlya-konyaka']={}
file_2['elitnye-nabory']={}
file_2['nabory-s-platkami']={}
file_2['dom-vinnye-nabory']={}
file_2['zimnie-nabory-']={}
file_2['shvejny-e-nabory-']={}
file_2['nabory-s-pledom']={}
file_2['kuxonny-e-nabory-']={}
file_2['podarochnye-nabory-detyam']={}
file_2['podarochnye-nabory-dlya-doma']={}
file_2['nabory-s-knigami']={}

file_2['elektronika']={}
file_2['fleshki']={}
file_2['elektronika-universalnye-akkumulyatory']={}
file_2['elektronika-portativnye-kolonki']={}
file_2['elektronika-naushniki']={}
file_2['elektronika-bytovaya-tehnika']={}
file_2['lampy']={}
file_2['elektronika-zaryadniki']={}
file_2['elektronika-aksessuary-dlya-mobilnyh-ustroystv']={}
file_2['smart-braslety']={}
file_2['umnyi-dom']={}
file_2['chehly-dlya-telefonov']={}
file_2['uvlazhniteli-vozduha-s-logotipom']={}

file_2['personalnye']={}
file_2['korporativnye-cartholdery']={}
file_2['personalnye-vizitnicy']={}
file_2['kreditniczy']={}
file_2['personalnye-dorojnye-organayzery']={}
file_2['personalnye-papki-bloknoty']={}
file_2['personalnye-zajimy-dlya-kupyur']={}
file_2['personalnye-oblojki-dlya-dokumentov']={}
file_2['personalnye-koshelki']={}
file_2['shaxmaty-']={}
file_2['nastolnye-aksessuary']={}
file_2['klyuchnicy-s-logotipom']={}

file_2['vip']={}
file_2['vip-znaki-vnimaniya']={}
file_2['vip-mechanic-music']={}
file_2['vip-podarochnye-knigi']={}
file_2['elitnyy-farfor']={}
file_2['elitnoe-steklo']={}
file_2['aksessuary-dlya-kureniya-s-logotipom']={}
file_2['gerby-']={}
file_2['press-papie-s-logotipom']={}
file_2['globusy-s-logotipom']={}

file_2['promo']={}
file_2['promo-svetootrajateli']={}
file_2['promo-plastikovye-brelki']={}
file_2['metallicheskie']={}
file_2['promo-antistressy']={}
file_2['promo-promoprodukciya']={}
file_2['promo-zajigalki']={}
file_2['promo-zerkala']={}
file_2['elektronika-1']={}
file_2['magnity-s-logotipom']={}
file_2['tovary-dlya-zhivotny-x']={}
file_2['laniyardy']={}



file_3={}

file_3['ejednevniki']={}
file_3['datirovanny-e']={}
file_3['nedatirovanny-e']={}
file_3['bloknoty']={}
file_3['zapisny-e-knizhki']={}
file_3['organajzery-']={}
file_3['planingi']={}
file_3['nabori-s-ejednevnikami']={}
file_3['ejednevniki-upakovka']={}

file_3['ruchki']={}
file_3['ruchki-plastikovye']={}
file_3['ruchki-metallicheskie']={}
file_3['ruchki-derevyannye']={}
file_3['ruchki-stilusy']={}
file_3['ruchki-karandashi']={}
file_3['ruchki-nabory-ruchek']={}
file_3['futlyary-dlya-ruchek']={}
file_3['markery']={}
file_3['nabory-dlya-risovaniya']={}
file_3['elitnye-ruchki']={}
file_3['kancelyarskie-tovary']={}

file_3['nagrady']={}
file_3['stely']={}
file_3['plaketki']={}
file_3['medali']={}
file_3['shil-dy-']={}
file_3['kubki']={}
file_3['znachki-s-logotipom']={}
file_3['tarelki-nagradnye']={}

file_3['suveniry-k-prazdnikam']={}
file_3['den-elektrosvyazi']={}
file_3['podarki-na-den-energetika']={}
file_3['den-himika']={}
file_3['den-zashhity-detey']={}
file_3['den-pobedy-9-maya']={}
file_3['den-yurista']={}
file_3['podarki-nachalniku']={}
file_3['podarki-na-voennye-prazdniki']={}
file_3['eko-podarki']={}
file_3['podarki-na-den-rozhdeniya-kompanii']={}
file_3['podarki-na-den-rossii']={}
file_3['den-stroitelya']={}
file_3['den-metallurga']={}
file_3['den-jeleznodorojnika']={}
file_3['den-medrabotnika']={}
file_3['den-shahtera']={}
file_3['podarki-kollege']={}
file_3['suveniry-k-8-marta']={}
file_3['den-znaniy-1-sentyabrya']={}
file_3['den-neftyanika']={}
file_3['podarki-na-den-uchitelya']={}
file_3['14-fevralya']={}
file_3['podarki-avtomobilistu']={}
file_3['podarki-moryakam']={}
file_3['suveniry-k-23-fevralya']={}
file_3['podarki-na-den-policii']={}
file_3['den-bankovskogo-rabotnika']={}
file_3['den-aviacii']={}
file_3['den-geologa']={}
file_3['otkry-tki']={}
file_3['religiozny-e-podarki']={}
file_3['podarki-dlya-rabotnikov-kultury']={}

file_3['uhod-i-zdorovie']={}
file_3['kosmetichki-s-logotipom']={}
file_3['grelki-s-logotipom']={}
file_3['manikyurnye-nabory']={}
file_3['tovary-dlya-lichnoy-gigieny']={}
file_3['sredstva-individualnoy-zashity']={}

    
file_4={}
file_4['upakovka']={}
file_4['podarochnye-pakety']={}
file_4['podarochnye-korobki']={}
file_4['iz-metalla']={}
file_4['iz-dereva']={}
file_4['iz-kartona']={}
file_4['podarochnaya-upakovka']={}
file_4['iz-kozhi']={}
file_4['iz-plastika']={}
file_4['iz-tekstilya']={}
file_4['napolniteli-dlya-upakovki']={}

file_4['sumki']={}
file_4['sumki-ryukzaki']={}
file_4['sumki-dlya-pokupok']={}
file_4['plyazhny-e-sumki']={}
file_4['sumki-konferenc-sumki']={}
file_4['sumki-dlya-piknika']={}
file_4['poyasny-e-sumki']={}
file_4['sumki-nesessery']={}
file_4['sumki-dorojnye']={}
file_4['sumki-sportivnye']={}
file_4['sumki-sumki-dlya-noutbuka']={}
file_4['chehly-dlya-plansheta']={}
file_4['sumki-chemodany']={}
file_4['sumki-portfeli']={}
file_4['sumki-meshki']={}

file_4['dom']={}
file_4['dom-tekstil']={}
file_4['polotencza-s-logotipom']={}
file_4['pledy-s-logotipom']={}
file_4['podushki-s-logotipom']={}
file_4['dom-kuhonnye-prisposobleniya']={}
file_4['dom-interernye-podarki']={}
file_4['dom-statuetki']={}
file_4['vazy']={}
file_4['dom-shkatulki']={}
file_4['dom-nabory-dlya-uhoda-za-obuvyu']={}
file_4['dom-fotoramki-fotoalbomy']={}
file_4['kosmetika-i-parfyumeriya']={}
file_4['dom-dekorativnye-svechi']={}
file_4['gorshki']={}
file_4['skvorechniki']={}
file_4['tovary-dlya-sada-i-dachi-s-logotipom']={}
file_4['tovary-dlya-bani-i-sauny-s-logotipom']={}

file_4['podarki-na-novyi-god-s-logotipom']={}
file_4['novyy-god-simvol-2024-goda']={}
file_4['novogodnie-elochnye-shary-s-logotipom']={}
file_4['novogodnie-podushki-s-logotipom']={}
file_4['novogodnie-elochnye-igrushki-s-logotipom']={}
file_4['novogodnie-svechi-s-logotipom']={}
file_4['novogodnie-nabory-s-logotipom']={}
file_4['ukrasheniya-dlya-ofisa-k-novomu-godu-s-logotipom']={}
file_4['tovary-dlya-novogodnego-stola-s-logotipom']={}
file_4['upakovka-dlya-novogodnih-podarkov-s-logotipom']={}
file_4['kalendari-s-logotipom']={}
file_4['novogodnyaya-vyazannaya-odezhda-s-logotipom']={}

file_4['detyam']={}
file_4['tovary-dlya-risovaniya']={}
file_4['myagkie-igrushki']={}
file_4['detskaya-kancelyariya']={}
file_4['aksessuary-dlya-detey']={}
file_4['elektronika-dlya-detey']={}
file_4['detskie-ryukzaki-s-logotipom']={}
file_4['bytovaya-tehnika']={}
    
    
    

    
    




# Предполагается, что словари file_0, file_1, file_2, file_3 и file_4 уже заполнены
# Добавляем словарь для записей, которые не соответствуют установленным правилам
file_no_correct = {}

# Распределение списков URL по ключам в словарях file_0..file_4
for i in пути:
    checklist = []  # Список для отслеживания, было ли произведено выборка по правилам
    status = '...'  # Статус для отслеживания наличия ключей в словарях

    # Проверка и добавление в file_1
    try:
        file_1[пути[i][1]]  # Проверяем, есть ли ключ в file_1
    except KeyError:
        status = 'no file1'
        
    if status == '...':
        try:
            DATA_END['file 1']
        except KeyError:
            DATA_END['file 1'] = {}

        DATA_END['file 1'][i] = пути[i]
        checklist.append(i)

    if status == 'no file1':
        status = '...'

    # Проверка и добавление в file_2
    try:
        file_2[пути[i][1]]  # Проверяем, есть ли ключ в file_2
    except KeyError:
        status = 'no file2'
        
    if status == '...':
        try:
            DATA_END['file 2']
        except KeyError:
            DATA_END['file 2'] = {}

        DATA_END['file 2'][i] = пути[i]
        checklist.append(i)

    if status == 'no file2':
        status = '...'

    # Проверка и добавление в file_3
    try:
        file_3[пути[i][1]]  # Проверяем, есть ли ключ в file_3
    except KeyError:
        status = 'no file3'
        
    if status == '...':
        try:
            DATA_END['file 3']
        except KeyError:
            DATA_END['file 3'] = {}

        DATA_END['file 3'][i] = пути[i]
        checklist.append(i)

    if status == 'no file3':
        status = '...'

    # Проверка и добавление в file_4
    try:
        file_4[пути[i][1]]  # Проверяем, есть ли ключ в file_4
    except KeyError:
        status = 'no file4'

    if status == '...':
        try:
            DATA_END['file 4']
        except KeyError:
            DATA_END['file 4'] = {}

        DATA_END['file 4'][i] = пути[i]
        checklist.append(i)
        
    if status == 'no file4':
        status = '...'

    # Если checklist остался пустым, значит URL не подошел ни под одно правило
    if not checklist:
        file_no_correct[i] = пути[i]


# Сборка XML файлов

# file0
xml_list_0 = []
# Формируем URL для записей, которые не подошли к установленным правилам
for i in file_no_correct:
    correct_str_url = 'https://test.test'
    for ii in file_no_correct[i]:
        correct_str_url = correct_str_url + '/' + ii
    xml_list_0.append(correct_str_url)

# Генерируем и сохраняем sitemap-0.xml
sitemap = generate_sitemap(xml_list_0)
save_sitemap(sitemap, 'sitemap-0.xml')

# file1
xml_list_1 = []
# Формируем URL для записей, которые соответствуют file 1
for i in DATA_END['file 1']:
    correct_str_url = 'https://test.test'
    for ii in DATA_END['file 1'][i]:
        correct_str_url = correct_str_url + '/' + ii
        # Проверка для тестирования, если компонент URL равен 'about-us'
        if ii == 'about-us':
            pass
    xml_list_1.append(correct_str_url)

# Генерируем и сохраняем sitemap-1.xml
sitemap = generate_sitemap(xml_list_1)
save_sitemap(sitemap, 'sitemap-1.xml')

# file2
xml_list_2 = []
# Формируем URL для записей, которые соответствуют file 2
for i in DATA_END['file 2']:
    correct_str_url = 'https://test.test'
    for ii in DATA_END['file 2'][i]:
        correct_str_url = correct_str_url + '/' + ii
    xml_list_2.append(correct_str_url)

# Генерируем и сохраняем sitemap-2.xml
sitemap = generate_sitemap(xml_list_2)
save_sitemap(sitemap, 'sitemap-2.xml')

# file3
xml_list_3 = []
# Формируем URL для записей, которые соответствуют file 3
for i in DATA_END['file 3']:
    correct_str_url = 'https://test.test'
    for ii in DATA_END['file 3'][i]:
        correct_str_url = correct_str_url + '/' + ii
    xml_list_3.append(correct_str_url)

# Генерируем и сохраняем sitemap-3.xml
sitemap = generate_sitemap(xml_list_3)
save_sitemap(sitemap, 'sitemap-3.xml')

# file4
xml_list_4 = []
# Формируем URL для записей, которые соответствуют file 4
for i in DATA_END['file 4']:
    correct_str_url = 'https://test.test'
    for ii in DATA_END['file 4'][i]:
        correct_str_url = correct_str_url + '/' + ii
    xml_list_4.append(correct_str_url)

# Генерируем и сохраняем sitemap-4.xml
sitemap = generate_sitemap(xml_list_4)
save_sitemap(sitemap, 'sitemap-4.xml')

# Формируем список URL для файлов sitemap
urls = [
    'https://test.test/sitemap-0.xml',
    'https://test.test/sitemap-1.xml',
    'https://test.test/sitemap-2.xml',
    'https://test.test/sitemap-3.xml',
    'https://test.test/sitemap-4.xml'
]

# Генерируем sitemapindex.xml
sitemap_xml = generate_sitemapindex(urls)

# Сохраняем файл sitemapindex.xml
filename = 'sitemapindex.xml'
with open(filename, 'w') as file:
    file.write(sitemap_xml)

print(f"Файл {filename} успешно сохранен.")



        

